name: Rotate RDS Aurora CA Bundle

on:
  # schedule:
  #   - cron: '0 9 * * 1'  # Every Monday at 09:00 UTC
  workflow_dispatch:

env:
  BUNDLE_FILE: test-rds-bundle.pem
  THIRTY_DAYS_IN_SECONDS: 2592000

permissions:
  contents: read

jobs:
  check:
    name: Check current CA bundle
    runs-on: ubuntu-latest
    permissions:
      contents: read
    outputs:
      expiration-rfc822: ${{ steps.get-expiration-date.outputs.value }}
      update-required: ${{ steps.expiration-check.outputs.update-required }}
    steps:
      - uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            github.com:443
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          show-progress: 'false'
          persist-credentials: 'false'
      - name: Show certificate expiration date
        id: get-expiration-date
        run: |
          CHECK_OUTPUT_FILE=$(mktemp -t expiration-date.XXXXX)
          openssl x509 -enddate -noout -in "$BUNDLE_FILE" > $CHECK_OUTPUT_FILE
          EXPIRATION_DATE=$(cut -d= -f 2 "$CHECK_OUTPUT_FILE")
          echo "value=$EXPIRATION_DATE" >> $GITHUB_OUTPUT
      - name: Check certificate expiration
        id: expiration-check
        run: |
          echo "Current CA bundle expiration: $EXPIRATION_DATE"
          THIRTY_DAYS_IN_SECONDS=2592000
            if openssl x509 -checkend "$THIRTY_DAYS_IN_SECONDS" -noout -in "$BUNDLE_FILE"; then
              echo 'update-required=false' >> $GITHUB_OUTPUT
              echo 'CA bundle expiration is greater than 30 days in the future, so no action is needed.' >> $GITHUB_STEP_SUMMARY
            else
              echo 'update-required=true' >> $GITHUB_OUTPUT
              echo 'CA bundle expires in less than 30 days. Please update!' >> $GITHUB_STEP_SUMMARY
            fi
        env:
          EXPIRATION_DATE: ${{ steps.get-expiration-date.outputs.value }}

  update:
    name: Update bundle pull request
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    needs:
      - check
    if: needs.check.outputs.update-required == 'true'
    env:
      BUNDLE_DOWNLOAD_URL: https://truststore.pki.rds.amazonaws.com/global/global-bundle.pem
    steps:
      - uses: step-security/harden-runner@17d0e2bd7d51742c71671bd19fa12bdc9d40a3d6 # v2.8.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            api.github.com:443
            github.com:443
            truststore.pki.rds.amazonaws.com:443
      - uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          show-progress: 'false'
          persist-credentials: 'false'
      - name: Download latest CA bundle
        run: wget -O "$BUNDLE_FILE" "$BUNDLE_DOWNLOAD_URL"
      - name: Format old and new CA bundle expiration dates
        id: format-dates
        run: |
          DOWNLOAD_DATE=$(stat -c '@%Z' "$BUNDLE_FILE" | date --iso-8601=seconds -f -)
          echo "download-date=$DOWNLOAD_DATE" >> $GITHUB_OUTPUT

          echo "current-expiration=$(echo "$CURRENT_EXPIRATION_RFC822" | date --iso-8601=date -f - )" >> $GITHUB_OUTPUT

          NEW_EXPIRATION_DATE_FILE=$(mktemp -t new-expiration-date.XXXXX)
          openssl x509 -enddate -noout -in "$BUNDLE_FILE" | cut -d= -f 2 | date --iso-8601=date -f - > $NEW_EXPIRATION_DATE_FILE
          echo "new-expiration=$(cat $NEW_EXPIRATION_DATE_FILE)" >> $GITHUB_OUTPUT
        env:
          CURRENT_EXPIRATION_RFC822: ${{ needs.check.outputs.expiration-rfc822 }}
      - name: Write the pull request description
        id: pr-description
        run: |
          PR_DESCRIPTION_FILE=$(mktemp -t description.md.XXXXX)
          echo "file=$PR_DESCRIPTION_FILE" >> $GITHUB_OUTPUT
          cat >> $PR_DESCRIPTION_FILE << 'ENDOFPRDESCRIPTION'
          ## RDS Aurora CA Bundle Update

          This pull request replaces the current RDS Auora CA bundle file, which is not valid after **${{ env.CURRENT_EXPIRATION_DATE }}**.

          The new CA bundle file has the following details:
          - Downloaded from: ${{ env.BUNDLE_DOWNLOAD_URL }}
          - Downloaded at: ${{ env.DOWNLOAD_DATE }}
          - Expiration date: ${{ env.NEW_EXPIRATION_DATE }}

          ENDOFPRDESCRIPTION

          FAKE_EXPIRATION_THRESHOLD_IN_SECONDS=31536000
          if ! openssl x509 -checkend "$FAKE_EXPIRATION_THRESHOLD_IN_SECONDS" -noout -in "$BUNDLE_FILE"; then
            cat >> $PR_DESCRIPTION_FILE << 'ENDOFPRWARNING'
            > [!WARNING]
            > The new CA bundle expiration date is less than 30 days from today!
            > Please investigate before merging this pull request.

          ENDOFPRWARNING
          fi

          cat >> $PR_DESCRIPTION_FILE << 'ENDOFPRFOOTER'
          *Pusher: @${{ env.GH_ACTOR }}, Action: `${{ env.GH_ACTION }}`, Workflow: [`${{ env.GH_WORKFLOW }}`](${{ env.GH_SERVER}}/${{ env.GH_REPO }}/actions/runs/${{ env.GH_RUN_ID }})*
          ENDOFPRFOOTER
        env:
          DOWNLOAD_DATE: ${{ steps.format-dates.outputs.download-date }}
          CURRENT_EXPIRATION_DATE: ${{ steps.format-dates.outputs.current-expiration }}
          NEW_EXPIRATION_DATE: ${{ steps.format-dates.outputs.new-expiration }}
          GH_ACTOR: ${{ github.actor }}
          GH_ACTION: ${{ github.event_name }}
          GH_WORKFLOW: ${{ github.workflow }}
          GH_SERVER: ${{ github.server_url }}
          GH_REPO: ${{ github.repository }}
          GH_RUN_ID: ${{ github.run_id }}
      - name: Submit Pull Request
        id: submit-pr
        uses: peter-evans/create-pull-request@c5a7806660adbe173f04e3e038b0ccdcd758773c # v6.1.0
        with:
          title: "Chore [certificates] Replace RDS CA bundle expiring on ${{ steps.format-dates.outputs.current-expiration }}"
          body-path: ${{ steps.pr-description.outputs.file }}
          branch: chore/rds-ca-bundle-update/expires/${{ steps.format-dates.outputs.new-expiration }}
          commit-message: "Add RDS CA bundle downloaded on ${{ steps.format-dates.outputs.download-date }}"
          add-paths: |
            ${{ env.BUNDLE_FILE }}
      - name: Write PR summary
        run: |
          echo "Result: $PR_ACTIONED pull request [#$PR_NUMBER]($PR_URL)." >> $GITHUB_STEP_SUMMARY
        env:
          PR_ACTIONED: ${{ steps.submit-pr.outputs.pull-request-operation }}
          PR_NUMBER: ${{ steps.submit-pr.outputs.pull-request-number }}
          PR_URL: ${{ steps.submit-pr.outputs.pull-request-url }}
