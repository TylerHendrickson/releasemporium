name: React to Releases

on:
  release:
    types:
      - created
      - edited

permissions:
  contents: write
  id-token: write

jobs:
  do_stuff:
    name: Do Stuff
    runs-on: ubuntu-latest
    steps:
      - env:
          GITHUB_EVENT_ACTION: ${{ toJson(github.event.action) }}
        run: echo $GITHUB_EVENT_ACTION
      - env:
          GITHUB_CONTEXT: ${{ toJson(github.event.release) }}
        run: echo $GITHUB_CONTEXT | jq .

  plan_terraform:
    runs-on: ubuntu-latest
    if: always() && github.event.release.prerelease
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/setup-go@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          go-version-file: go.mod
      - run: terraform init
      - id: plan
        if: always() && github.event.release.prerelease
        env:
          TF_VAR_release_identifier: ${{ github.event.release.tag_name }}
        run: terraform plan -input=false -no-color -out=tfplan && terraform show -no-color tfplan
      - name: Reformat Plan
        id: reformat_plan
        if: always() && steps.plan.outcome != 'cancelled' && steps.plan.outcome != 'skipped'
        run: terraform show -no-color tfplan | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > terraform_plan.txt
      - name: Encrypt plan
        id: encrypt_plan
        env:
          GPG_PASSPHRASE: ${{ secrets.TFPLAN_SECRET }}
        run: echo "$GPG_PASSPHRASE" | gpg --batch --yes --passphrase-fd 0 --symmetric --cipher-algo AES256 tfplan
      - name: Upload plan as release asset
        if: always() && steps.reformat_plan.outcome != 'cancelled' && steps.reformat_plan.outcome != 'skipped'
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.event.release.tag_name }} tfplan.gpg terraform_plan.txt --clobber
      - if: always() && steps.plan.outcome != 'cancelled' && steps.plan.outcome != 'skipped'
        run: md5sum ../bin/* && md5sum builds/*

  apply_terraform:
    runs-on: ubuntu-latest
    if: always() && !github.event.release.prerelease
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - uses: actions/setup-go@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          go-version-file: go.mod
      - id: download_plan
        env:
          GH_TOKEN: ${{ github.token }}
          TAG_NAME: ${{ github.event.release.tag_name }}
        run: gh release download "$TAG_NAME" -p tfplan.gpg
      - id: decrypt_plan
        if: always() && steps.download_plan.outcome != 'skipped' && steps.download_plan.outcome != 'cancelled'
        env:
          GPG_PASSPHRASE: ${{ secrets.TFPLAN_SECRET }}
        run: gpg --quiet --batch --yes --decrypt --passphrase="$GPG_PASSPHRASE" --output tfplan tfplan.gpg
      - run: terraform init
      - id: apply
        if: always() && steps.decrypt_plan.outcome != 'cancelled' && steps.decrypt_plan.outcome != 'skipped'
        run: terraform apply tfplan
      - if: always() && steps.apply.outcome != 'cancelled' && steps.apply.outcome != 'skipped'
        run: md5sum ../bin/* && md5sum builds/*
