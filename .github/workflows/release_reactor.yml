name: React to Releases

on:
  release:
    types:
      - created
      - edited

permissions:
  contents: write
  id-token: write

jobs:
  do_stuff:
    name: Do Stuff
    runs-on: ubuntu-latest
    steps:
      - env:
          GITHUB_EVENT_ACTION: ${{ toJson(github.event.action) }}
        run: echo $GITHUB_EVENT_ACTION
      - env:
          GITHUB_CONTEXT: ${{ toJson(github.event.release) }}
        run: echo $GITHUB_CONTEXT | jq .

  plan_terraform:
    runs-on: ubuntu-latest
    if: always()
    defaults:
      run:
        working-directory: terraform
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
      - run: terraform init
      - id: plan
        if: always() && github.event.release.prerelease
        env:
          TF_VAR_release_identifier: ${{ github.event.release.tag_name }}
        run: terraform plan -input=false -no-color -out=tfplan && terraform show -no-color tfplan
      - name: Reformat Plan
        id: reformat_plan
        if: always() && steps.plan.outcome != 'cancelled' && steps.plan.outcome != 'skipped'
        run: |
          echo '${{ steps.plan.outputs.stdout || steps.plan.outputs.stderr }}' \
            | sed -E 's/^([[:space:]]+)([-+])/\2\1/g' > plan.txt
          PLAN=$(cat plan.txt | head -c 65300) # Observe GitHub's 65535 character limit
          echo "PLAN<<EOF" >> $GITHUB_ENV
          echo "$PLAN" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
      - name: Upload plan as release asset
        if: always() && steps.reformat_plan.outcome != 'cancelled' && steps.reformat_plan.outcome != 'skipped'
        env:
          GH_TOKEN: ${{ github.token }}
        run: gh release upload ${{ github.event.release.tag_name }} plan.txt --clobber
