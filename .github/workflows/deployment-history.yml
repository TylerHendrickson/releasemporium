name: Track Release Deployment History

on:
  deployment_status:

permissions:
  contents: write

env:
  RELEASE_TAG: ${{ github.event.deployment.ref }}
  DEPLOY_ENVIRONMENT: ${{ github.event.deployment_status.environment }}
  DEPLOY_ENVIRONMENT_URL: ${{ github.event.deployment_status.environment_url }}
  DEPLOY_MOMENT: ${{ github.event.deployment_status.updated_at }}
  DEPLOY_LOG_URL: ${{ github.event.deployment_status.log_url }}

jobs:
  on_success:
    if: always() && github.event.deployment_status.state == 'success'
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3
      - name: Get release notes
        id: get
        continue-on-error: true
        run: gh release view $RELEASE_TAG --json body --jq .body > release_notes.md
      - name: Add deployment history to release notes
        if: always() && steps.get.outcome == 'success'
        run: printf "\n- ✅ Deployed to [$DEPLOY_ENVIRONMENT]($DEPLOY_ENVIRONMENT_URL) at [$DEPLOY_MOMENT]($DEPLOY_LOG_URL)\n" >> release_notes.md
      - name: Update release notes and status
        if: always() && steps.get.outcome == 'success'
        run: gh release edit $RELEASE_TAG -F release_notes.md --draft=false --prerelease=false --latest --verify-tag

  on_failure:
    if: always() && (github.event.deployment_status.state == 'failure' || github.event.deployment_status.state == 'error')
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ github.token }}
    steps:
      - uses: actions/checkout@v3
      - name: Get release notes
        id: get
        continue-on-error: true
        run: gh release view $RELEASE_TAG --json body --jq .body > release_notes.md
      - name: Add deployment history to release notes
        if: always() && steps.get.outcome == 'success'
        run: printf "\n- ❌ Deployment to [$DEPLOY_ENVIRONMENT]($DEPLOY_ENVIRONMENT_URL) had problems at [$DEPLOY_MOMENT]($DEPLOY_LOG_URL)\n" >> release_notes.md
      - name: Update release notes and status
        if: always() && steps.get.outcome == 'success'
        run: gh release edit $RELEASE_TAG -F release_notes.md --verify-tag
